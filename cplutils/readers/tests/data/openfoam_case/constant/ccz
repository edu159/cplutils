/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "constant";
    object      ccz;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   nonuniform List<scalar> 
96
(
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
3.9685
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
11.9055
)
;

boundaryField
{
    movingWall
    {
        type            calculated;
        value           nonuniform List<scalar> 4(3.9685 11.9055 3.9685 11.9055);
    }
    CPLReceiveMD
    {
        type            calculated;
        value           nonuniform List<scalar> 4(3.9685 11.9055 3.9685 11.9055);
    }
    streamwiseIn
    {
        type            cyclic;
    }
    streamwiseOut
    {
        type            cyclic;
    }
    front
    {
        type            cyclic;
    }
    back
    {
        type            cyclic;
    }
}


// ************************************************************************* //
